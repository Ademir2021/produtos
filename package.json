{
  "name": "produtos",
  "version": "1.0.0",
  "description": "- 1 `npm init -y` - 2 `npm install typescript -D` - 3 `yarn install express` - 4 `yarn add @types/express -D` # Criar diretorio src - 1 `mkdir src` - 2 `cd src` - 3 `touch server.ts` - 4 `no server.ts crie o server com o express` # Criar diretorio tsc - 1 `mkdir dist/js` # Iniciar um projeto typescript 1 - `npx tsc --init` # Configurando o tsconfig.json 1 - `...` # Compilando a configuração 1 - `npx tsc` ? # Instalação do ts-node-dev para loud automatico 1 - `npx install ts-node-dev` 2 - `\"scripts\":{     \"dev\":  \"dev\": \"ts-node-dev --inspect --ignore-watch node_modules src/server.ts\" },` # Subir o server 1 - `yarn run dev ou npm run dev` # teste dos códigos 1 - `npx tsc` {testa os erros typscripts} 2 - `npx tsc -w` {load de testes automático} # iniciando o PRISMA 1 - `npm prisma -D` 2 - `npm @prisma/client` 3 - `yarn prisma init`",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "dev": "ts-node-dev --inspect --ignore-watch node_modules src/server.ts"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/express": "^4.17.13",
    "prisma": "^4.3.1",
    "typescript": "^4.8.2"
  },
  "dependencies": {
    "@prisma/client": "^4.3.1",
    "axios": "^1.2.1",
    "express": "^4.18.1",
    "express-async-errors": "^3.1.1",
    "node": "^19.2.0",
    "pg": "^8.8.0",
    "ts-node-dev": "^2.0.0"
  }
}
